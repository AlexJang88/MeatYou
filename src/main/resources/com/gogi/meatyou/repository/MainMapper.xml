<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gogi.meatyou.repository.MainMapper">
 <select id="cusCount" resultType="int" >
      select count(*) from product p ,CUS_ORDER c where p.p_num = c.p_num
   </select>


      <!-- 파워링크 카운트 -->
      <select id="M_statusCount" resultType="com.gogi.meatyou.bean.ProductDTO" >
         select count(*) from 
      (select * from product p ,CUS_ORDER c , member m, p_detail d
      where p.p_num=d.pd_p_num and p.p_num = c.co_p_num and m.m_id = p.p_m_id and m.m_id = c.co_m_ID and M_status like '%' || 2002 || '%' and p_status!=3 and d.pd_p_status=0)
      </select>
    
      <!-- 메인 파워링크 BEST -->
   <select id="mainCUS" resultType="com.gogi.meatyou.bean.ProductDTO" >
         select * from
      (select b.* , rownum r from
      (select * from product p ,member m, p_detail d where p.p_num=d.pd_p_num and m.m_id=p.p_m_id and M_status like '%' || 2002 || '%' and p_status!=3 and d.pd_p_status=0) b)
      <![CDATA[ where r >= 1 and r <= 10 ]]>
   </select>
   
   
      <!-- 전체 파워링크 카운트 -->
      <select id="powCount" resultType="int" >
      select count(*) from
      (select * from product p ,member m, p_detail d where p.p_num=d.pd_p_num and m.m_id=p.p_m_id and M_status like '%' || 2002 || '%' and p_status!=3 and d.pd_p_status=0)
      </select>

      <!-- 파워링크 전체 List -->
      <select id="poLinkList" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
      select * from
      (select b.* , rownum r from
      (select * from product p ,member m, p_detail d where p.p_num=d.pd_p_num and m.m_id=p.p_m_id and M_status like '%' || 2002 || '%' and p_status!=3 and d.pd_p_status=0) b)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
   </select>
   
    <!-- 파워링크 List 정렬 -->
   <select id="poLinkSort" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
         <if test="price != null"> 
         select * from
         (select b.* , rownum r from
         (select * from product p ,member m, p_detail d where p.p_num=d.pd_p_num and m.m_id=p.p_m_id and M_status like '%' || 2002 || '%' and p_status!=3 and d.pd_p_status=0 order by (p_price/weight)*100 asc) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]> </if>
      
      <if test="sale != null"> 
         select * from
         (select b.* , rownum r from
         (select * from 
         (select order_p_num,count(*) count from m_order group by order_p_num) ck , product p ,member m, p_detail d 
         where p.p_num=d.pd_p_num and m.m_id=p.p_m_id and p.p_num=order_p_num(+) and M_status like '%' || 2002 || '%' and p_status!=3 and d.pd_p_status=0 order by count desc nulls last) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]> </if>
         
      <if test="star != null"> 
         select * from
         (select b.* , rownum r from
         (select * from 
         (select avg(star) as star, r_p_num from review group by r_p_num) st, product p ,member m, p_detail d 
         where p.p_num=d.pd_p_num and m.m_id=p.p_m_id and p.p_num=st.r_p_num(+) and M_status like '%' || 2002 || '%' and p_status!=3 and d.pd_p_status=0 order by star desc nulls last) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]> </if>
         
      <if test="review != null"> 
         select * from
         (select b.* , rownum r from
         (select * from 
         (select count(*) r_cnt, r_p_num from review group by r_p_num) st, product p ,member m, p_detail d 
         where p.p_num=d.pd_p_num and m.m_id=p.p_m_id and p.p_num=st.r_p_num(+) and M_status like '%' || 2002 || '%' and p_status!=3 and d.pd_p_status=0 order by r_cnt desc nulls last) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]> </if>
         
      <if test="news != null"> 
         select * from
         (select b.* , rownum r from
         (select * from product p ,member m, p_detail d where p.p_num=d.pd_p_num and m.m_id=p.p_m_id and M_status like '%' || 2002 || '%' and p_status!=3 and d.pd_p_status=0 order by p_reg_date desc) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]> </if>
   </select>
   
   
   
      <!-- 메인 소고기 베스트 -->
      <select id="meatBest" resultType="com.gogi.meatyou.bean.ProductDTO" >
      select * from 
      (select b.* , rownum r from
      ((select * from 
      (select order_p_num,count(*) count from m_order group by order_p_num) 
      ck ,product p, meat_category mc, p_detail d where p.p_num=d.pd_p_num and ck.order_p_num=p.p_num and mc.meat_p_category=p.p_category and p_status!=3 and d.pd_p_status=0 order by count desc) b)
         <![CDATA[ where mod((meat_p_category),100)>=20) where r >= 1 and r <= 10 ]]>
      </select>

      <!-- 메인 돼지고기 베스트 -->
      <select id="forkBest" resultType="com.gogi.meatyou.bean.ProductDTO" >
      select * from 
      (select b.* , rownum r from
      ((select * from 
      (select order_p_num,count(*) count from m_order group by order_p_num) 
      ck ,product p,meat_category mc, p_detail d where p.p_num=d.pd_p_num and ck.order_p_num=p.p_num and mc.meat_p_category=p.p_category and p_status!=3 and d.pd_p_status=0 order by count desc) b)
         <![CDATA[ where mod((meat_p_category),100)<20) where r >= 1 and r <= 10 ]]>
      </select>
   
   
      <!-- 메인 신상품 카운트 -->
      <select id="newProductCNT" resultType="int" >
      select count(*) from product p , p_detail d where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by p_reg_date desc
      </select>
   
      <!-- 메인 신상품 BEST -->
      <select id="newProductBest" resultType="com.gogi.meatyou.bean.ProductDTO" >
      select * from product p, p_detail d where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by p_reg_date desc
      </select>
   
      <!-- 메인 신상품 최신순 -->
      <select id="newProduct" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
      select * from 
      (select b.* , rownum r from
      (select * from  product p, p_detail d where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by p_reg_date desc) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select>
   
   <!-- 메인 신상품 가격순 -->
      <select id="newProductPrice" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
         select * from 
         (select b.* , rownum r from
         <if test="value == 'new'"> (select * from product p, p_detail d where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by p_reg_date desc) b) </if> 
         <if test="value == 'price'"> (select * from  product p, p_detail d where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by (p_price/weight)*100 asc) b) </if> 
         <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select>
   
   <!-- 메인 신상품 판매량순 -->
      <select id="newProductSale" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
         select * from 
         (select b.* , rownum r from
         <if test="value == 'new'"> (select * from  product p, p_detail d where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by p_reg_date desc) b) </if> 
         <if test="value == 'price'"> (select * from  product p, p_detail d where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by (p_price/weight)*100 asc) b) </if> 
         <![CDATA[ where r >= #{start} and r <= #{end} ]]>
   </select>
      
   <!-- 서칭 카운트 -->
      <select id="searchCount" resultType="int">
         select count(*) from 
         (select * from product p, p_detail d where  p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and 
         <if test="searchOption == 'title'"> (p_name like '%' || #{search} || '%')) </if> 
         <if test="searchOption == 'total'"> (p_name like '%' || #{search} || '%' or pd_P_DESC like '%' || #{search} || '%')) </if>
      </select>
   
   <!-- 서칭 리스트(최신순) -->
   <select id="searchList" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
      select * from
      (select b.* , rownum r from
      (select * from product p, p_detail d
      where  p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and 
      <if test="searchOption == 'title'"> p_name like '%' || #{search} || '%'  </if> 
      <if test="searchOption == 'total'"> (p_name like '%' || #{search} || '%' or pd_P_DESC like '%' || #{search} || '%') </if> 
      order by p_reg_date
      <if test="desc == null"> asc ) b )</if>
      <if test="desc != null"> desc ) b )</if>
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
   </select>

   <!-- 서칭 리스트(가격순) -->
   <select id="searchPrice" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
      select * from
      (select b.* , rownum r from
      (select *
      from product p, p_detail d
      where  p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and 
      <if test="searchOption == 'title'"> p_name like '%' || #{search} || '%'  </if> 
      <if test="searchOption == 'total'"> (p_name like '%' || #{search} || '%' or pd_P_DESC like '%' || #{search} || '%') </if> 
      order by (p_price/weight)*100
      <if test="price != null"> asc ) b )</if>
      <if test="price == null"> desc ) b )</if>
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
   </select>


   <!-- 서칭 카운트(판매량순) -->
      <select id="searchSaleCNT"  resultType="int">
         select count(*) from 
      (select * from 
      (select order_p_num,count(*) count from m_order group by order_p_num) ck ,product p, p_detail d
      where ck.order_p_num=p.p_num and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by count desc)
      <if test="searchOption == 'title'"> where p_name like '%' || #{search} || '%' </if>
      <if test="searchOption == 'total'"> where p_name like '%' || #{search} || '%' or pd_P_DESC like '%' || #{search} || '%' </if> 
      </select>


   <!-- 서칭 리스트(판매량순) -->
   <select id="searchSale" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
      select * from 
      (select b.* , rownum r from
      ((select * from 
      (select order_p_num,count(*) count from m_order group by order_p_num) ck ,product p, p_detail d
      where ck.order_p_num=p.p_num and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by count desc) b)
      <if test="searchOption == 'title'"> where p_name like '%' || #{search} || '%' ) </if> 
      <if test="searchOption == 'total'"> where p_name like '%' || #{search} || '%' or pd_P_DESC like '%' || #{search} || '%' ) </if> 
   <![CDATA[ where r >= #{start} and r <= #{end} ]]>
   </select>
   
   <!-- 서칭 카운트 (별점) -->
      <select id="searchStarCount" resultType="int">
      select count(*) from 
      (select * from 
      (select avg(star), r_p_num from review group by r_p_num  order by avg(star) desc) st  ,product p, p_detail d
      where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num and d.pd_p_num=st.r_p_num(+) and p_status!=3 and d.pd_p_status=0)
      <if test="searchOption == 'title'"> where p_name like '%' || #{search} || '%'  </if>
      <if test="searchOption == 'total'"> where p_name like '%' || #{search} || '%' or pd_P_DESC like '%' || #{search} || '%' </if>
      </select>

   <!-- 서칭 리스트(별점순) -->
   <select id="searchListStar" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
         select * from 
      (select b.* , rownum r from
      ((select * from 
      (select avg(star) as star, r_p_num from review group by r_p_num  order by star desc) st  ,product p, p_detail d
      where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num and d.pd_p_num=st.r_p_num(+) and p_status!=3 and d.pd_p_status=0) b)
      <if test="searchOption == 'title'"> where p_name like '%' || #{search} || '%')</if>
      <if test="searchOption == 'total'"> where p_name like '%' || #{search} || '%' or pd_P_DESC like '%' || #{search} || '%')</if>
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
   </select>
   
      <!-- 서칭 카운트(리뷰순) -->
   <select id="searchReviewCount" resultType="int">
         select count(*) from 
      (select * from 
      (select count(*) r_cnt, r_p_num from review group by r_p_num) st, product p, p_detail d
      where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by r_cnt desc nulls last)
      <if test="searchOption == 'title'"> where p_name like '%' || #{search} || '%' </if>
      <if test="searchOption == 'total'"> where p_name like '%' || #{search} || '%' or pd_P_DESC like '%' || #{search} || '%' </if>
   </select>
   
   <!-- 서칭 리스트(리뷰순) -->
   <select id="searchListReview" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
         select * from 
      (select b.* , rownum r from
      ((select * from 
      (select count(*) r_cnt, r_p_num from review group by r_p_num ) st, product p, p_detail d
      where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by r_cnt desc nulls last) b)
      <if test="searchOption == 'title'"> where p_name like '%' || #{search} || '%')</if>
      <if test="searchOption == 'total'"> where p_name like '%' || #{search} || '%' or pd_P_DESC like '%' || #{search} || '%')</if>
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
   </select>
   
   <!-- 메인 메뉴 소고기, 돼지고기 카운트 -->
   <select id="mainMeatCount" resultType="int" >
      select count(*) from 
         (select * from product p, p_detail d 
         where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%_' || #{category} || '_%')
   </select>

   <!-- 소고기,돼지고기(신상품, 가격, 판매량 정렬) -->
   <select id="mainMeat" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
         <if test="news != null"> 
            select * from 
         (select b.* , rownum r from
         (select * from product p, p_detail d 
         where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%_' || #{category} || '_%' order by p_reg_date desc ) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]> </if>
   
         <if test="price != null"> 
            select * from 
         (select b.* , rownum r from
         (select * from product p, p_detail d 
         where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%_' || #{category} || '_%' order by (p_price/weight)*100 asc ) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]>  </if>
   
         <if test="sale != null"> 
            select * from 
            (select b.* , rownum r from
         (select * from 
         (select order_p_num,count(*) count from m_order group by order_p_num) ck ,product p,meat_category mc  , p_detail d 
         where ck.order_p_num=p.p_num and mc.meat_p_category=p.p_category and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by count desc ) b 
         where meat_p_category like '%_' || #{category} || '_%')
         <![CDATA[ where r >= #{start} and r <= #{end} ]]>   </if> 
   </select>
   
    <!-- 메인 메뉴 소고기, 돼지고기 카운트 -->
   <select id="mainMeatKOR_CNT" resultType="int" >
      select count(*) from 
         (select * from product p, p_detail d 
         where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%' || #{category} || '_%')
   </select>


   <!-- 소고기,돼지고기(신상품, 가격, 판매량 정렬) -->
   <select id="mainMeatKOR" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
         <if test="news != null"> 
            select * from 
         (select b.* , rownum r from
         (select * from product p, p_detail d 
         where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%' || #{category} || '_%' order by p_reg_date desc ) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]> </if>
   
         <if test="price != null"> 
            select * from 
         (select b.* , rownum r from
         (select * from product p, p_detail d 
         where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%' || #{category} || '_%' order by (p_price/weight)*100 asc ) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]>  </if>
   
         <if test="sale != null"> 
            select * from 
         (select b.* , rownum r from
         (select * from 
         (select order_p_num,count(*) count from m_order group by order_p_num) ck ,product p,meat_category mc  , p_detail d 
         where ck.order_p_num(+)=p.p_num and mc.meat_p_category=p.p_category and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%' || #{category} || '_%' order by count desc nulls last) b )
         <![CDATA[ where r >= #{start} and r <= #{end} ]]>   </if> 
         
      <if test="review != null"> 
            select * from 
         (select b.* , rownum r from
         (select * from 
         (select count(*) r_cnt, r_p_num from review group by r_p_num  ) st, product p, p_detail d, meat_category m
         where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num  and p.p_category=m.meat_p_category and d.pd_p_num=st.r_p_num(+) 
         and st.r_p_num(+)=d.pd_p_num and d.pd_p_num=st.r_p_num(+) and p_status!=3 and d.pd_p_status=0 and p_category like '%' || #{category} || '_%' order by r_cnt desc nulls last) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]>   </if> 
         
         <if test="star != null"> 
            select * from 
         (select b.* , rownum r from
         (select * from 
         (select avg(star) as star, r_p_num from review group by r_p_num ) st, product p, p_detail d, meat_category m
         where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num  and p.p_category=m.meat_p_category and d.pd_p_num=st.r_p_num(+) and p_status!=3 and d.pd_p_status=0 and p_category like '%' || #{category} || '_%' order by star desc nulls last) b)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>   </if>
   </select>
   
   
   
       <!-- 메인 메뉴 소고기, 돼지고기 카운트 -->
   <select id="mainMeatEX_CNT" resultType="int" >
      select count(*) from 
         (select * from product p, p_detail d 
         where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%' || #{category} || '_%')
   </select>


   <!-- 소고기,돼지고기(신상품, 가격, 판매량 정렬) -->
   <select id="mainMeatEX" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
         <if test="news != null"> 
            select * from 
         (select b.* , rownum r from
         (select * from product p, p_detail d 
         where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%' || #{category} || '_%' order by p_reg_date desc ) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]> </if>
   
         <if test="price != null"> 
            select * from 
         (select b.* , rownum r from
         (select * from product p, p_detail d 
         where p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%' || #{category} || '_%' order by (p_price/weight)*100 asc ) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]>  </if>
   
         <if test="sale != null"> 
            select * from 
            (select b.* , rownum r from
         (select * from 
         (select order_p_num,count(*) count from m_order group by order_p_num) ck ,product p,meat_category mc  , p_detail d 
         where ck.order_p_num=p.p_num and mc.meat_p_category=p.p_category and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by count desc ) b 
         where meat_p_category like '%' || #{category} || '_%')
         <![CDATA[ where r >= #{start} and r <= #{end} ]]>   </if> 
   </select>
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   <!-- 소고기,돼지고기(별점 정렬) -->
      <select id="mainMeatSort" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
         <if test="category == 1"> select * from 
            (select b.* , rownum r from
         ((select * from 
         (select avg(star) as star, r_p_num from review group by r_p_num  order by star desc) st, product p, p_detail d, meat_category m
         where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num  and p.p_category=m.meat_p_category and d.pd_p_num=st.r_p_num(+) and p_status!=3 and d.pd_p_status=0) b)
         where p_category like '%_' || #{category} || '_%')
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>   </if> 
      
      <if test="category == 2"> select * from 
            (select b.* , rownum r from
         ((select * from 
         (select avg(star) as star, r_p_num from review group by r_p_num  order by star desc) st, product p, p_detail d, meat_category m
         where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num  and p.p_category=m.meat_p_category and d.pd_p_num=st.r_p_num(+) and p_status!=3 and d.pd_p_status=0) b)
         where p_category like '%_' || #{category} || '_%')
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>   </if> 
   </select>
   
   <!-- 소고기,돼지고기(리뷰수 정렬) -->
   <select id="mainMeatReview" resultType="com.gogi.meatyou.bean.ProductDTO" parameterType="hashmap">
         <if test="category == 1">
            select * from 
         (select b.* , rownum r from
         (select * from 
         (select count(*) r_cnt, r_p_num from review group by r_p_num ) st, product p, p_detail d, meat_category m
         where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num  and p.p_category=m.meat_p_category and d.pd_p_num=st.r_p_num(+) 
         and st.r_p_num(+)=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%_' || #{category} || '_%' order by r_cnt desc nulls last) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]> </if> 
                  
      <if test="category == 2">
            select * from 
         (select b.* , rownum r from
         (select * from 
         (select count(*) r_cnt, r_p_num from review group by r_p_num ) st, product p, p_detail d, meat_category m
         where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num  and p.p_category=m.meat_p_category and d.pd_p_num=st.r_p_num(+) 
         and st.r_p_num(+)=d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_category like '%_' || #{category} || '_%' order by r_cnt desc nulls last) b)
         <![CDATA[ where r >= #{start} and r <= #{end} ]]> </if> 
   </select>

   
   <!-- 세트 상품 카운트 -->
   <select id="setMenuCNT" resultType="int" >
         select count(*) from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=#{p_s_category})
      </select> 
      
      <!-- 세트 상품 카운트 -->
   <select id="setMenuSortCNT" resultType="int" >
         select count(*) from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=1)
      </select> 
      
      <!-- 세트 판매량 카운트 -->
   <select id="setMenuSalesCNT" resultType="int" >
      select count(*) from 
      ((select * from 
      (select order_p_num,count(*) count from m_order group by order_p_num) ck ,product p, p_detail d
      where ck.order_p_num=p.p_num and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by count desc) b)
      where p_s_category=1
      </select> 
   
   <!-- 세트 상품(소고기,돼지고기 모두 출력) -->
   <select id="setMenu" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
         select * from
      (select b.* , rownum r from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=#{p_s_category}) b)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select> 
      
   <!-- 세트 상품 판매량 카운트 -->
   <select id="setMenuPriceCNT" resultType="int" >
      select count(*) from 
      ((select * from 
      (select order_p_num,count(*) count from m_order group by order_p_num) ck ,product p, p_detail d
      where ck.order_p_num=p.p_num(+) and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by count desc) b)
      where p_s_category=1
      </select> 
      
      <!-- 세트 상품 정렬(가격순) -->
   <select id="setMenuPrice" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
        select * from
      (select b.* , rownum r from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=1 order by (p_price/weight)*100 asc) b)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select> 
      
            <!-- 세트 상품 정렬(판매량순) -->
   <select id="setMenuSales" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
      select * from 
      (select b.* , rownum r from
      ((select * from 
      (select order_p_num,count(*) count from m_order group by order_p_num) ck ,product p, p_detail d
      where ck.order_p_num(+)=p.p_num and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by count desc nulls last) b)
      where p_s_category=1)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select> 
      
            <!-- 세트 상품 정렬(별점순) -->
   <select id="setMenuStars" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
      select * from 
      (select b.* , rownum r from
      ((select * from 
      (select avg(star) as star, r_p_num from review group by r_p_num  order by star desc nulls last) st  ,product p, p_detail d
      where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num and d.pd_p_num=st.r_p_num(+) and p_status!=3 and d.pd_p_status=0) b)
      where p_s_category=1)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select> 
      
            <!-- 세트 상품 정렬(리뷰순) -->
   <select id="setMenuReviews" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
      select * from 
      (select b.* , rownum r from
      ((select * from 
      (select count(*) r_cnt, r_p_num from review group by r_p_num ) st, product p, p_detail d
      where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0) b)
      where p_s_category=1 order by r_cnt desc nulls last)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select>
      
            <!-- 세트 상품 정렬(신상품순) -->
   <select id="setMenuNews" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
      select * from
      (select b.* , rownum r from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=1 order by p_reg_date nulls last) b)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select> 
      
      <!-- 선물세트 카운트 -->
   <select id="giftSetCNT" resultType="int" >
         select count(*) from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=2)
      </select> 
   
   <!-- 선물세트(소고기,돼지고기 모두 출력) -->
   <select id="giftSet" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
         select * from
      (select b.* , rownum r from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=2) b)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select>
      
      <!-- 선물세트 정렬(가격순 정렬) -->
   <select id="giftSetPrice" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
         select * from
      (select b.* , rownum r from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=2 order by (p_price/weight)*100 asc) b)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select>
      
      
      <!-- 선물세트 판매량 카운트 -->
   <select id="giftSetSalesCNT" resultType="int" >
      select count(*) from 
      ((select * from 
      (select order_p_num,count(*) count from m_order group by order_p_num) ck ,product p, p_detail d
      where ck.order_p_num=p.p_num and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by count desc) b)
      where p_s_category=2
      </select> 
      
      <!-- 선물세트 정렬(판매량순 정렬) -->
   <select id="giftSetSales" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
      select * from 
      (select b.* , rownum r from
      ((select * from 
      (select order_p_num,count(*) count from m_order group by order_p_num) ck ,product p, p_detail d
      where ck.order_p_num=p.p_num and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0 order by count desc nulls last) b)
      where p_s_category=2)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select>
      
      <!-- 선물세트 정렬(별점순 정렬) -->
   <select id="giftSetStars" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
      select * from 
      (select b.* , rownum r from
      ((select * from 
      (select avg(star) as star, r_p_num from review group by r_p_num) st  ,product p, p_detail d
      where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num and d.pd_p_num=st.r_p_num(+) and p_status!=3 and d.pd_p_status=0) b)
      where p_s_category=1 order by star desc nulls last)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select>
      
      <!-- 선물세트 정렬(리뷰순 정렬) -->
   <select id="giftSetReviews" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
      select * from 
      (select b.* , rownum r from
      ((select * from 
      (select count(*) r_cnt, r_p_num from review group by r_p_num ) st, product p, p_detail d
      where st.r_p_num(+)=p.p_num and p.p_num=d.pd_p_num and p_status!=3 and d.pd_p_status=0) b)
      where p_s_category=1 order by r_cnt desc nulls last)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select>
      
      <!-- 선물세트 정렬(신상품순 정렬) -->
   <select id="giftSetNews" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
      select * from
      (select b.* , rownum r from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=1 order by p_reg_date  nulls last) b)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select>
   
   <!-- 세트 메뉴(소고기) -->
   <select id="meatSet" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
         select * from
      (select b.* , rownum r from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=1 and p_category like '%_2_%') b)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select> 
   
   <!-- 세트 메뉴(돼지) -->
   <select id="forkSet" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
         select * from
      (select b.* , rownum r from
      (select * from product p, p_detail d where p.p_num = d.pd_p_num and p_status!=3 and d.pd_p_status=0 and p_s_category=1 and p_category like '%_1_%') b)
      <![CDATA[ where r >= #{start} and r <= #{end} ]]>
      </select> 
    
      <!-- 제품 상세정보 -->
   <select id="productDetail" resultType="com.gogi.meatyou.bean.ProductDetailDTO" >
         select * from 
         (select * from product, p_detail
         where p_num = pd_p_num) where p_num=#{p_num}
      </select> 
   
   <!-- 판매자의 다른 상품 정보 -->
      <select id="otherProductCount"  resultType="int" >
         select count(*) from 
         (select * from product p, p_detail d
         where p_num = pd_p_num and p_status!=3 and d.pd_p_status=0) where p_m_id=#{p_m_id}
      </select>
   
      <!-- 판매자의 다른 상품 정보 -->
   <select id="otherProductDetail" resultType="com.gogi.meatyou.bean.OtherProductDetailDTO" >
         select * from 
         (select * from product p, p_detail d
         where p_num = pd_p_num and p_status!=3 and d.pd_p_status=0) where p_m_id=#{p_m_id}
   </select>

      <!-- 전체 리뷰 -->   
   <select id="reviewAll" resultType="com.gogi.meatyou.bean.ReviewDTO">
      select * from 
      (select * from product, review
      where p_num=r_p_num) where p_num=#{p_num}
   </select>
   
      <!-- 전체 리뷰 페이징 카운트-->  
      <select id="reviewAllPagingCNT" resultType="int" >
         select count(*) from 
         (select * from product, review
         where p_num=r_p_num) where p_num=#{p_num}
   </select>
   
      <!-- 전체 리뷰 페이징 -->   
      <select id="reviewAllPaging" resultType="com.gogi.meatyou.bean.ReviewDTO" parameterType="hashmap">
         select * from
         (select b.* , rownum r from
         (select * from product, review where p_num=r_p_num and p_num=#{p_num} order by r_reg_date desc) b) where 
      <![CDATA[ r >= #{start} and r <= #{end} ]]>

   </select>
   
   <select id="reviewStar" resultType="int">
      select count(*) from  review where r_p_num=#{r_p_num}
   </select>

   <select id="reviewSum" resultType="double">
      select sum(star) from review where r_p_num=#{p_num}
   </select>

   <select id="mOderCount" resultType="int" >
      select count(*) from m_order where order_m_id=#{order_m_id} and order_p_num=#{order_p_num} and order_status=4
   </select>

   <select id="reviewCount" resultType="int" >
      select count(*) from review where r_m_id=#{r_m_id} and r_p_num=#{r_p_num}
   </select>
   
   <select id="reviewAllCNT" resultType="int" >
      select count(*) from review where r_p_num=#{r_p_num}
   </select>
   
   <select id="star1" resultType="int" >
      select count(*) from review where r_p_num=#{r_p_num} and star=1
   </select>
   
   <select id="star2" resultType="int" >
      select count(*) from review where r_p_num=#{r_p_num} and star=2
   </select>
   
   <select id="star3" resultType="int" >
      select count(*) from review where r_p_num=#{r_p_num} and star=3
   </select>
   
   <select id="star4" resultType="int" >
      select count(*) from review where r_p_num=#{r_p_num} and star=4
   </select>
   
   <select id="star5" resultType="int" >
      select count(*) from review where r_p_num=#{r_p_num} and star=5
   </select>
   
   <insert id="reviewInsert" parameterType="com.gogi.meatyou.bean.ReviewDTO">
      insert into review values(review_seq.nextval, 
                           #{r_m_id}, 
                           #{r_p_num}, 
                           #{r_content}, 
                           #{star}, 
                           #{r_img}, 
                           sysdate)
   </insert>
   
   <select id="ShoppingCartCNT" resultType="int" >
      select count(*) from shoppingcart_${shop_m_id}
   </select>
   
   <select id="ShoppingCartCNT2" resultType="int" >
      select count(*) from shoppingcart_${shop_m_id}
   </select>
   
   <insert id="ShoppingCartInsert" parameterType="com.gogi.meatyou.bean.ShoppingCartDTO">
      insert into shoppingcart_${shop_m_id} values(ShoppingCart_${shop_m_id}_seq.nextval, 
                           #{shop_m_id}, 
                           #{shop_p_num}, 
                           #{shop_quantity})
   </insert>   
   
   <insert id="ShoppingCartInsert2" parameterType="com.gogi.meatyou.bean.ShoppingCartDTO">
      insert into shoppingcart_${shop_m_id} values(ShoppingCart_${shop_m_id}_seq.nextval, 
                           #{shop_m_id}, 
                           #{shop_p_num}, 
                           #{shop_quantity})
   </insert>   
   
   <insert id="ShoppingCartInsert3" parameterType="com.gogi.meatyou.bean.ShoppingCartDTO">
      insert into shoppingcart_${shop_m_id} values(ShoppingCart_${shop_m_id}_seq.nextval, 
                           #{shop_m_id}, 
                           #{shop_p_num}, 
                           #{shop_quantity})
   </insert> 
   
   <select id="pickCNT" resultType="int" >
      select count(*) from p_pick_${ppic_m_id}
   </select>

   <select id="pick_p_numCNT" resultType="int" >
      select count(*) from p_pick_${ppic_m_id} where ppic_p_num=#{ppic_p_num}
   </select>

   <insert id="pickInsert" parameterType="com.gogi.meatyou.bean.PPicDTO">
      insert into p_pick_${ppic_m_id} values(p_pick_${ppic_m_id}_seq.nextval, #{ppic_p_num}, #{ppic_m_id})
   </insert>
   
   <insert id="pickInsertMain" parameterType="String">
      insert into p_pick_${ppic_m_id} values(p_pick_${ppic_m_id}_seq.nextval, #{ppic_p_num}, #{ppic_m_id})
   </insert>   
   
   <delete id="pickDelete" parameterType="com.gogi.meatyou.bean.PPicDTO">
      delete p_pick_${ppic_m_id} where ppic_p_num=#{ppic_p_num}
   </delete>   
   
   <delete id="pickDeleteMain" parameterType="com.gogi.meatyou.bean.PPicDTO">
      delete p_pick_${ppic_m_id} where ppic_p_num=#{ppic_p_num}
   </delete>   
   
   <select id="pCategory" parameterType="com.gogi.meatyou.bean.ProductDTO">
      select p_category from product, p_detail where p_num=pd_p_num and p_num=#{p_num}
   </select>   

</mapper>